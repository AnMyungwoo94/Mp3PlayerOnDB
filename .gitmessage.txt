# commit message 작성하기
# 1. i를 눌러 입력 모드로 전환할 수 있습니다.
# 2. 제목을 작성해주세요.(본문, 바닥글도 필요하면 작성해주세요)
# 3. 작성이 끝나면 esc를 눌러주세요. -> 다시 수정하려면 i를 눌러주세요.
# 4. :wq를 입력하면 저장 후 종료합니다.
# ------------------
# <제목>
# 타입: 주제
# 1. 타입은 대문자로 시작
# 2. 주제는 최대 50자까지 작성
#    - 끝에 마침표, 특수문자 금지
#    - 현재형 사용
#    - 한글로 작성
# 바로 아래에 작성

# 바로 아래 한 줄 공백 유지 (제목과 본문의 분리를 위함)

# ------------------
# <본문>(필요하면 작성)
# '무엇을', '왜' 작업했는지 설명한다.
# 한 줄당 최대 72자까지 작성
# 72자 초과시 줄바꿈
# 바로 아래에 작성

# 바로 아래 한 줄 공백 유지 (본문과 바닥글의 분리를 위함)

# ------------------
# <바닥글>(필요하면 작성)
# 바로 아래에 작성

# ------ 참고 ------
# [커밋 메시지 예시]
# Fix: 확인 버튼 비활성화 오류 수정
#
# 결제수단 등록 화면에서 입력값이 모두 채워질 때 확인 버튼이 활성화되지 않는 오류 수정
#
# Resolves: #32
# ------------------
# [타입 리스트]
# Feat        : 새로운 기능 추가
# Fix         : 버그(올바르지 않은 동작) 수정
# Add         : 라이브러리나 새로운 파일(Activity, Fragment, xml 등) 추가
# Refactor    : 내부 로직은 변경하지 않고, 기존의 코드 개선 / 클래스명 및 변수명 수정
# Design      : xml 등 사용자 UI 디자인 추가, 변경
# Comment     : 필요한 주석 추가 및 변경
# Style       : 코드 정렬, 줄바꿈 등 수정
# Docs        : README 문서 추가, 수정, 삭제
# Rename      : 파일이나 폴더명을 수정하거나 이동
# Remove      : 필요없는 파일, 주석, 코드를 삭제
# Chore       : 기타 변경사항 (build.gradle, AndroidManifest, .gitignore 등)
# ------------------
# [바닥글]
# Fixes       : 이슈 수정중 (아직 해결되지 않은 경우)
# Resolves    : 이슈 해결했을 때 사용
# Ref         : 참고할 이슈가 있을 때 사용
# Related to  : 해당 커밋에 관련된 이슈 번호 (아직 해결되지 않은 경우)